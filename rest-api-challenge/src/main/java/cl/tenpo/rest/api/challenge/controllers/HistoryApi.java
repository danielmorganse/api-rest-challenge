/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.65).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cl.tenpo.rest.api.challenge.controllers;

import cl.tenpo.rest.api.challenge.dtos.Error;
import cl.tenpo.rest.api.challenge.dtos.PaginatedHistory;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.validation.Valid;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.io.IOException;
import java.util.Optional;


@Validated
@RequestMapping(path = "${api.base-path}")
public interface HistoryApi {

    Logger log = LoggerFactory.getLogger(HistoryApi.class);

    default Optional<ObjectMapper> getObjectMapper(){
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest(){
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @SuppressWarnings("java:S3655")
    @Operation(summary = "Obtiene el historial de llamadas a la API", description = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Historial recuperado exitosamente", content = @Content(mediaType = "application/json", schema = @Schema(implementation = PaginatedHistory.class))),
        
        @ApiResponse(responseCode = "204", description = "Sin datos para la solicitud"),
        
        @ApiResponse(responseCode = "400", description = "Solicitud incorrecta", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))),
        
        @ApiResponse(responseCode = "429", description = "Demasiadas solicitudes", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))),
        
        @ApiResponse(responseCode = "500", description = "Error interno del servidor", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))) })
    @GetMapping(value = "/history",
        produces = { "application/json" })
    default ResponseEntity<PaginatedHistory> getHistory(@Parameter(in = ParameterIn.QUERY, description = "" ,schema=@Schema( defaultValue="0")) @Valid @RequestParam(value = "page", required = false, defaultValue="0") Integer page
, @Parameter(in = ParameterIn.QUERY, description = "" ,schema=@Schema( defaultValue="10")) @Valid @RequestParam(value = "size", required = false, defaultValue="10") Integer size
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{\n  \"total\" : 0,\n  \"records\" : [ {\n    \"endpoint\" : \"endpoint\",\n    \"requestBody\" : \"requestBody\",\n    \"response\" : \"response\",\n    \"urlParameters\" : {\n      \"key\" : \"urlParameters\"\n    },\n    \"timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  }, {\n    \"endpoint\" : \"endpoint\",\n    \"requestBody\" : \"requestBody\",\n    \"response\" : \"response\",\n    \"urlParameters\" : {\n      \"key\" : \"urlParameters\"\n    },\n    \"timestamp\" : \"2000-01-23T04:56:07.000+00:00\"\n  } ]\n}", PaginatedHistory.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default HistoryApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}

